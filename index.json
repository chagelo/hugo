[{"categories":null,"contents":"manjaro下安装hugo 安装hugo sudo pacman -Sy hugo # 本地new一个存放hugo数据的文件夹，并进行初始化 hugo new site ~/hugo 主题 下载 cd hugo git init git submodule add https://github.com/heyeshuang/hugo-theme-tokiwa.git themes/hugo-theme-tokiwa 主题调整 cd hugo \u0026amp;\u0026amp; npm i \u0026amp;\u0026amp; npm start 使用 #在hugo/content创建post hugo new post/hugo-install.md ","date":"2021-09-10T21:25:17+08:00","permalink":"https://chagelo.github.io/hugo/post/hugo-install/","section":"post","tags":null,"title":"Hugo Install"},{"categories":["算法","数学"],"contents":"链接 $\\text{SPOJ - NO GCD}$\n题意  给你一个长度为$n$的序列$a$，并且对于任意一个数$a[i]$，它只有小于$50$的素因子，且不含有平方因子，求有多少对$(i,j)$，使得$a[i]和a[j]$互质，或者$gcd$是质数。\n 输入格式：第一行输入$t$，包含$t$组样例，下面每组样例第一行一个$n$，下面一行输入一个长度为$n$的序列$a$。\n 数据范围：$1\\leq t\\leq 10,1\\leq 100000$.\n 输出格式：每个样例对应一行一个输出结果。\n分析  这一题是偶然在别人博客看到的，几乎没怎么写过数学题，感到这个思路非常非常的巧妙。\n 首先考虑到了$50$以内的素数仅有$15$个，而对于$a$序列中的任意两个数来说，它们的$gcd$要么为$1$，要么在这$15$个素数之中，要么为$1$，如果用二进制表示，那么则有它们二进制表示的与的结果为$0$，或者某一位为$1$(恰好有一个素因子)。对于一个二进制表示$i$来说，我们需要求出它的个数与，它补集的子集个数的乘积，这即是求出了$gcd$为$1$的情况，对于不为$1$的情况，我们求出它与，它的补集对某一位$0$取反变成$1$的所有子集个数在减去它补集没去反之间子集的个数，这二者乘积，对所有的状态进行累加。\n 关键是如何快速求子集个数，对于$i$，求所有的$j$，$j\\leq i \u0026amp;\u0026amp;(i|j)==i$。网上代码为：\nfor(i=0;i\u0026lt;M;i++){ for(j=i;;j=(j-1)\u0026amp;i){ //s[i]为i的子集的个数，子集j对应的个数为num[j]  s[i]+=num[j]; //关键，得到子集  if(!j) break; } } 代码 #include \u0026lt;algorithm\u0026gt;#include \u0026lt;cmath\u0026gt;#include \u0026lt;cstdio\u0026gt;#include \u0026lt;cstring\u0026gt;#include \u0026lt;iostream\u0026gt;#include \u0026lt;map\u0026gt;#include \u0026lt;ostream\u0026gt;#include \u0026lt;queue\u0026gt;#include \u0026lt;set\u0026gt;#include \u0026lt;stack\u0026gt;#include \u0026lt;string\u0026gt;#include \u0026lt;unordered_map\u0026gt;#include \u0026lt;vector\u0026gt; #define INF 0x7f7f7f7f #define MAXN 100005 #define N 200005 #define MOD 1000000007 #define P 2  typedef long long ll; namespace fastIO { //#define getchar() (p1 == p2 \u0026amp;\u0026amp; (p2 = (p1 = buf) + fread(buf, 1, 1\u0026lt;\u0026lt;22, stdin),  // p1 == p2) ? EOF : *p1++) char buf[(1 \u0026lt;\u0026lt; 22)], *p1 = buf, *p2 = buf;  inline int read() { char c = getchar(); int x = 0, f = 1; while (c \u0026lt; \u0026#39;0\u0026#39; || c \u0026gt; \u0026#39;9\u0026#39;) { if (c == \u0026#39;-\u0026#39;) f = -1; c = getchar(); } while (c \u0026gt;= \u0026#39;0\u0026#39; \u0026amp;\u0026amp; c \u0026lt;= \u0026#39;9\u0026#39;) x = x * 10 + c - \u0026#39;0\u0026#39;, c = getchar(); return x * f; } } // namespace fastIO  using namespace fastIO; using namespace std; const int M = 1 \u0026lt;\u0026lt; 15; int t, n, a[M], b[M], p[16] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47}; //2,3,5,7,11,13,17,19,23,29,31,37,41,43,47 int main() { cin \u0026gt;\u0026gt; t; while (t--) { memset(a, 0, sizeof(a)); memset(b, 0, sizeof(b)); cin \u0026gt;\u0026gt; n; ll x; for (int i = 1; i \u0026lt;= n; i++) { cin \u0026gt;\u0026gt; x; int temp = 0; for (int j = 0; j \u0026lt; 15; j++) if (x % p[j] == 0) temp += (1 \u0026lt;\u0026lt; j); //x为1时，temp为0  a[temp]++; } for (int i = 0; i \u0026lt; M; i++) //枚举j二进制表示下的子集  for (int j = i;;j = (j - 1)\u0026amp; i) { b[i] += a[j]; //写在这里，是考虑特殊情况，比如输入的x为1  if (!j) break; } ll ans = 0; for (int i = 0; i \u0026lt; M; i++) { //gcd为1  ans += 1ll * a[i] * b[i ^ (M - 1)]; //gcd为一个素数  for (int j = 0; j \u0026lt; 15; j++) if ((i \u0026gt;\u0026gt; j) \u0026amp; 1) ans += 1ll * a[i] * (b[i ^ (M - 1) ^ (1 \u0026lt;\u0026lt; j)] - b[i ^ (M - 1)]); } cout \u0026lt;\u0026lt; ans \u0026lt;\u0026lt; endl; } } ","date":"2019-09-25T17:24:45Z","permalink":"https://chagelo.github.io/hugo/post/spoj-no-gcd/","section":"post","tags":["数学","思维"],"title":"[SPOJ NO GCD]"},{"categories":null,"contents":"","date":"2019-05-28T00:00:00Z","permalink":"https://chagelo.github.io/hugo/archives/","section":"","tags":null,"title":""},{"categories":["themes","syntax"],"contents":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n  The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n  ","date":"2019-03-11T00:00:00Z","permalink":"https://chagelo.github.io/hugo/post/markdown-syntax/","section":"post","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide"},{"categories":null,"contents":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\n Exierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude  Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\n Comas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et  Vagus elidunt \nThe Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n .canon { background: white; width: 100%; height: auto;} ","date":"2019-03-09T00:00:00Z","permalink":"https://chagelo.github.io/hugo/post/placeholder-text/","section":"post","tags":["markdown","text"],"title":"Placeholder Text"},{"categories":null,"contents":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:\n  {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }}  To enable KaTex globally set the parameter math to true in a project's configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions   Examples Inline math: \\( \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… \\)\nBlock math:\n\\[ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } \\]\n","date":"2019-03-08T00:00:00Z","permalink":"https://chagelo.github.io/hugo/post/math-typesetting/","section":"post","tags":null,"title":"Math Typesetting"},{"categories":null,"contents":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\n N.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n.emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }  .emojify { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; font-size: 2rem; vertical-align: middle; } @media screen and (max-width:650px) { .nowrap { display: block; margin: 25px 0; } } ","date":"2019-03-05T00:00:00Z","permalink":"https://chagelo.github.io/hugo/post/emoji-support/","section":"post","tags":["emoji"],"title":"Emoji Support"},{"categories":null,"contents":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/yuin/goldmark https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","date":"2019-02-28T00:00:00Z","permalink":"https://chagelo.github.io/hugo/about/","section":"","tags":null,"title":"About"}]